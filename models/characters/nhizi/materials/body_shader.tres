[gd_resource type="VisualShader" load_steps=17 format=2]

[ext_resource path="res://shaders/body_shader_sky.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarConstant" id=38]
constant = 0.1

[sub_resource type="VisualShaderNodeScalarConstant" id=39]
constant = 0.5

[sub_resource type="VisualShaderNodeScalarConstant" id=42]
constant = 0.25

[sub_resource type="VisualShaderNodeTextureUniform" id=43]
output_port_for_preview = 0
uniform_name = "Texture"

[sub_resource type="VisualShaderNodeTextureUniform" id=44]
uniform_name = "TextureUniform2"

[sub_resource type="VisualShaderNodeColorConstant" id=46]
constant = Color( 1, 1, 0.0313726, 1 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=52]

[sub_resource type="VisualShaderNodeVectorOp" id=53]
operator = 2

[sub_resource type="VisualShaderNodeVectorScalarMix" id=54]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.0 ]

[sub_resource type="VisualShaderNodeInput" id=55]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=56]
operator = 10

[sub_resource type="VisualShaderNodeInput" id=57]
input_name = "view"

[sub_resource type="VisualShaderNodeScalarConstant" id=58]
constant = 0.5

[sub_resource type="VisualShaderNodeInput" id=59]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=31]
texture = ExtResource( 1 )

[resource]
code = "shader_type spatial;
render_mode diffuse_toon, specular_toon, async_visible;

uniform sampler2D Texture;
uniform sampler2D tex_frg_4;
uniform sampler2D TextureUniform2;



void vertex() {
// Output:0

}

void fragment() {
// Input:35
	vec3 n_out35p0 = vec3(UV, 0.0);

// TextureUniform:14
	vec3 n_out14p0;
	float n_out14p1;
	{
		vec4 n_tex_read = texture(Texture, n_out35p0.xy);
		n_out14p0 = n_tex_read.rgb;
		n_out14p1 = n_tex_read.a;
	}

// Color:17
	vec3 n_out17p0 = vec3(1.000000, 1.000000, 0.031373);
	float n_out17p1 = 1.000000;

// VectorOp:25
	vec3 n_out25p0 = n_out14p0 * n_out17p0;

// Input:33
	vec3 n_out33p0 = VIEW;

// Input:28
	vec3 n_out28p0 = NORMAL;

// VectorOp:32
	vec3 n_out32p0 = reflect(n_out33p0, n_out28p0);

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out32p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Scalar:34
	float n_out34p0 = 0.500000;

// VectorScalarMix:24
	vec3 n_out24p0 = mix(n_out25p0, n_out4p0, n_out34p0);

// Scalar:10
	float n_out10p0 = 0.100000;

// Scalar:11
	float n_out11p0 = 0.500000;

// TextureUniform:15
	vec3 n_out15p0;
	float n_out15p1;
	{
		vec4 n_tex_read = texture(TextureUniform2, UV.xy);
		n_out15p0 = n_tex_read.rgb;
		n_out15p1 = n_tex_read.a;
	}

// Scalar:13
	float n_out13p0 = 0.250000;

// Output:0
	ALBEDO = n_out24p0;
	ROUGHNESS = n_out10p0;
	SPECULAR = n_out11p0;
	NORMALMAP = n_out15p0;
	NORMALMAP_DEPTH = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 1885.59, 290.667 )
modes/diffuse = 4
modes/specular = 3
nodes/fragment/0/position = Vector2( 1200, 40 )
nodes/fragment/4/node = SubResource( 31 )
nodes/fragment/4/position = Vector2( 260, 100 )
nodes/fragment/10/node = SubResource( 38 )
nodes/fragment/10/position = Vector2( 780, 120 )
nodes/fragment/11/node = SubResource( 39 )
nodes/fragment/11/position = Vector2( 760, 200 )
nodes/fragment/13/node = SubResource( 42 )
nodes/fragment/13/position = Vector2( 760, 700 )
nodes/fragment/14/node = SubResource( 43 )
nodes/fragment/14/position = Vector2( -260, -620 )
nodes/fragment/15/node = SubResource( 44 )
nodes/fragment/15/position = Vector2( 680, 460 )
nodes/fragment/17/node = SubResource( 46 )
nodes/fragment/17/position = Vector2( -200, -280 )
nodes/fragment/24/node = SubResource( 52 )
nodes/fragment/24/position = Vector2( 720, -160 )
nodes/fragment/25/node = SubResource( 53 )
nodes/fragment/25/position = Vector2( 340, -280 )
nodes/fragment/26/node = SubResource( 54 )
nodes/fragment/26/position = Vector2( 680, 300 )
nodes/fragment/28/node = SubResource( 55 )
nodes/fragment/28/position = Vector2( -540, 440 )
nodes/fragment/32/node = SubResource( 56 )
nodes/fragment/32/position = Vector2( -240, 320 )
nodes/fragment/33/node = SubResource( 57 )
nodes/fragment/33/position = Vector2( -560, 300 )
nodes/fragment/34/node = SubResource( 58 )
nodes/fragment/34/position = Vector2( 240, -120 )
nodes/fragment/35/node = SubResource( 59 )
nodes/fragment/35/position = Vector2( -600, -460 )
nodes/fragment/connections = PoolIntArray( 13, 0, 0, 9, 15, 0, 0, 8, 10, 0, 0, 3, 24, 0, 0, 0, 28, 0, 32, 1, 33, 0, 32, 0, 32, 0, 4, 0, 4, 0, 24, 1, 34, 0, 24, 2, 25, 0, 26, 1, 14, 0, 25, 0, 17, 0, 25, 1, 35, 0, 14, 0, 25, 0, 24, 0, 11, 0, 0, 4 )
