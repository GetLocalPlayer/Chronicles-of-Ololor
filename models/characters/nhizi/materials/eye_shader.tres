[gd_resource type="VisualShader" load_steps=9 format=2]

[ext_resource path="res://textures/sky.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarConstant" id=38]
constant = 0.1

[sub_resource type="VisualShaderNodeScalarConstant" id=39]
constant = 1.0

[sub_resource type="VisualShaderNodeTextureUniform" id=43]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=52]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=54]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.7 ]

[sub_resource type="VisualShaderNodeInput" id=30]
input_name = "normal"

[sub_resource type="VisualShaderNodeTexture" id=31]
texture = ExtResource( 1 )

[resource]
code = "shader_type spatial;
render_mode diffuse_toon, specular_toon, async_visible;

uniform sampler2D TextureUniform;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:14
	vec3 n_out14p0;
	float n_out14p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out14p0 = n_tex_read.rgb;
		n_out14p1 = n_tex_read.a;
	}

// Input:3
	vec3 n_out3p0 = NORMAL;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out3p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// VectorScalarMix:24
	float n_in24p2 = 0.50000;
	vec3 n_out24p0 = mix(n_out14p0, n_out4p0, n_in24p2);

// Scalar:10
	float n_out10p0 = 0.100000;

// Scalar:11
	float n_out11p0 = 1.000000;

// VectorScalarMix:26
	vec3 n_in26p0 = vec3(0.00000, 0.00000, 0.00000);
	float n_in26p2 = 0.70000;
	vec3 n_out26p0 = mix(n_in26p0, n_out24p0, n_in26p2);

// Output:0
	ALBEDO = n_out24p0;
	ROUGHNESS = n_out10p0;
	SPECULAR = n_out11p0;
	EMISSION = n_out26p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -77.7116, 120.147 )
modes/diffuse = 4
modes/specular = 3
nodes/fragment/0/position = Vector2( 1240, 20 )
nodes/fragment/3/node = SubResource( 30 )
nodes/fragment/3/position = Vector2( 100, 200 )
nodes/fragment/4/node = SubResource( 31 )
nodes/fragment/4/position = Vector2( 360, 100 )
nodes/fragment/10/node = SubResource( 38 )
nodes/fragment/10/position = Vector2( 900, 200 )
nodes/fragment/11/node = SubResource( 39 )
nodes/fragment/11/position = Vector2( 900, 260 )
nodes/fragment/14/node = SubResource( 43 )
nodes/fragment/14/position = Vector2( 220, -240 )
nodes/fragment/24/node = SubResource( 52 )
nodes/fragment/24/position = Vector2( 620, -60 )
nodes/fragment/26/node = SubResource( 54 )
nodes/fragment/26/position = Vector2( 880, 360 )
nodes/fragment/connections = PoolIntArray( 4, 0, 24, 1, 10, 0, 0, 3, 26, 0, 0, 5, 24, 0, 0, 0, 14, 0, 24, 0, 24, 0, 26, 1, 11, 0, 0, 4, 3, 0, 4, 0, 4, 0, 24, 1, 10, 0, 0, 3, 26, 0, 0, 5, 24, 0, 0, 0, 14, 0, 24, 0, 24, 0, 26, 1, 11, 0, 0, 4, 3, 0, 4, 0 )
