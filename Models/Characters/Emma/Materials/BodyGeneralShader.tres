[gd_resource type="VisualShader" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=121]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeVectorOp" id=131]
operator = 2

[sub_resource type="VisualShaderNodeVectorScalarMix" id=132]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.2 ]

[sub_resource type="VisualShaderNodeColorUniform" id=138]
uniform_name = "ColorUniform"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D TextureUniform;
uniform vec4 ColorUniform : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// ColorUniform:7
	vec3 n_out7p0 = ColorUniform.rgb;
	float n_out7p1 = ColorUniform.a;

// VectorOp:5
	vec3 n_out5p0 = n_out2p0 * n_out7p0;

// VectorScalarMix:6
	vec3 n_in6p0 = vec3(0.00000, 0.00000, 0.00000);
	float n_in6p2 = 0.20000;
	vec3 n_out6p0 = mix(n_in6p0, n_out5p0, n_in6p2);

// Output:0
	ALBEDO = n_out5p0;
	EMISSION = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -378.123, 385.795 )
nodes/fragment/2/node = SubResource( 121 )
nodes/fragment/2/position = Vector2( -440, 40 )
nodes/fragment/5/node = SubResource( 131 )
nodes/fragment/5/position = Vector2( -100, 160 )
nodes/fragment/6/node = SubResource( 132 )
nodes/fragment/6/position = Vector2( 100, 300 )
nodes/fragment/7/node = SubResource( 138 )
nodes/fragment/7/position = Vector2( -480, 300 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 6, 0, 0, 5, 5, 0, 0, 0, 5, 0, 6, 1, 7, 0, 5, 1 )
