[gd_resource type="VisualShader" load_steps=7 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=100]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeTextureUniform" id=101]
uniform_name = "TextureUniform2"

[sub_resource type="VisualShaderNodeScalarConstant" id=102]
constant = 1.0

[sub_resource type="VisualShaderNodeVectorScalarMix" id=103]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.3 ]

[sub_resource type="VisualShaderNodeScalarConstant" id=104]
constant = 0.5

[sub_resource type="VisualShaderNodeScalarConstant" id=105]
constant = 0.15

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, diffuse_toon, specular_toon, async_visible;

uniform sampler2D TextureUniform;
uniform sampler2D TextureUniform2;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Scalar:6
	float n_out6p0 = 0.500000;

// Scalar:7
	float n_out7p0 = 0.150000;

// VectorScalarMix:5
	vec3 n_in5p0 = vec3(0.00000, 0.00000, 0.00000);
	float n_in5p2 = 0.30000;
	vec3 n_out5p0 = mix(n_in5p0, n_out2p0, n_in5p2);

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(TextureUniform2, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// Scalar:4
	float n_out4p0 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;
	ROUGHNESS = n_out6p0;
	SPECULAR = n_out7p0;
	EMISSION = n_out5p0;
	NORMALMAP = n_out3p0;
	NORMALMAP_DEPTH = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -369, 74.0869 )
modes/cull = 2
modes/depth_draw = 3
modes/diffuse = 4
modes/specular = 3
nodes/vertex/0/position = Vector2( 420, 180 )
nodes/fragment/2/node = SubResource( 100 )
nodes/fragment/2/position = Vector2( -260, -160 )
nodes/fragment/3/node = SubResource( 101 )
nodes/fragment/3/position = Vector2( 100, 380 )
nodes/fragment/4/node = SubResource( 102 )
nodes/fragment/4/position = Vector2( 120, 560 )
nodes/fragment/5/node = SubResource( 103 )
nodes/fragment/5/position = Vector2( 120, 240 )
nodes/fragment/6/node = SubResource( 104 )
nodes/fragment/6/position = Vector2( -200, 140 )
nodes/fragment/7/node = SubResource( 105 )
nodes/fragment/7/position = Vector2( -200, 220 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 0, 8, 4, 0, 0, 9, 2, 0, 5, 1, 5, 0, 0, 5, 2, 1, 0, 1, 6, 0, 0, 3, 7, 0, 0, 4 )
